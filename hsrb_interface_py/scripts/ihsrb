#!/usr/bin/env python

from IPython.config.loader import Config
try:
    get_ipython
except NameError:
    nested = 0
    cfg = Config()
else:
    cfg = Config()
    nested = 1



from IPython.terminal.embed import InteractiveShellEmbed
shell = InteractiveShellEmbed(config=cfg,
                              banner1="HSR-B Interactive Shell 0.1.0",
                              exit_msg="Leaving HSR-B Interactive Shell")

LOGO = r"""
      ____________  ______  _________       __  _______ ____
     /_  __/ __ \ \/ / __ \/_  __/   |     / / / / ___// __ \
      / / / / / /\  / / / / / / / /| |    / /_/ /\__ \/ /_/ /
     / / / /_/ / / / /_/ / / / / ___ |   / __  /___/ / _, _/
    /_/  \____/ /_/\____/ /_/ /_/  |_|  /_/ /_//____/_/ |_|
"""

import math
from math import radians, degrees
from hsrb_interface import Robot, ItemTypes
from hsrb_interface import geometry

with Robot() as robot:
    whole_body = robot.try_get('whole_body')
    omni_base = robot.try_get('omni_base')
    head_r_stereo_camera = robot.try_get('head_r_stereo_camera')
    head_l_stereo_camera = robot.try_get('head_l_stereo_camera')
    head_rgbd_sensor_depth = robot.try_get('head_rgbd_sensor_depth')
    head_rgbd_sensor_rgb = robot.try_get('head_rgbd_sensor_rgb')
    collision_world = robot.try_get('default', ItemTypes.COLLISION_WORLD)
    suction = robot.try_get('suction')
    gripper = robot.try_get('gripper')
    wrist_wrench = robot.try_get('wrist_wrench')
    base_imu = robot.try_get('base_imu')
    base_scan = robot.try_get('base_scan')
    marker = robot.try_get('marker')
    battery = robot.try_get('battery')
    tts = robot.try_get('default', ItemTypes.TEXT_TO_SPEECH)
    shell(LOGO)
